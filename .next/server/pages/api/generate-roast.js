"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/generate-roast";
exports.ids = ["pages/api/generate-roast"];
exports.modules = {

/***/ "(api-node)/./lib/voteStore.ts":
/*!**************************!*\
  !*** ./lib/voteStore.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   voteStore: () => (/* binding */ voteStore)\n/* harmony export */ });\n// Core state management for RoastBot\n// In-memory singleton store for game state and voting\n// Singleton store\nclass VoteStore {\n    getGameState() {\n        return {\n            ...this.gameState\n        };\n    }\n    startRound(topic) {\n        this.gameState.topic = topic;\n        this.gameState.gameStarted = true;\n        this.gameState.aiRoast = '';\n        this.gameState.humanRoast = '';\n        this.gameState.votes = {\n            human: 0,\n            ai: 0\n        };\n        this.gameState.isVotingOpen = false;\n        return this.getGameState();\n    }\n    setAIRoast(roast) {\n        this.gameState.aiRoast = roast;\n        return this.getGameState();\n    }\n    setHumanRoast(roast) {\n        this.gameState.humanRoast = roast;\n        return this.getGameState();\n    }\n    openVoting() {\n        this.gameState.isVotingOpen = true;\n        return this.getGameState();\n    }\n    closeVoting() {\n        this.gameState.isVotingOpen = false;\n        // Determine round winner\n        const { human, ai } = this.gameState.votes;\n        let winner = 'tie';\n        if (human > ai) {\n            winner = 'human';\n        } else if (ai > human) {\n            winner = 'ai';\n        }\n        this.gameState.roundWinners.push(winner);\n        return this.getGameState();\n    }\n    submitVote(isAI) {\n        if (!this.gameState.isVotingOpen) {\n            throw new Error('Voting is not open');\n        }\n        if (isAI) {\n            this.gameState.votes.ai++;\n        } else {\n            this.gameState.votes.human++;\n        }\n        return this.getGameState();\n    }\n    getVotes() {\n        const { human, ai } = this.gameState.votes;\n        const total = human + ai;\n        const voteStats = {\n            total,\n            humanVotes: human,\n            aiVotes: ai,\n            humanPercentage: total > 0 ? Math.round(human / total * 100) : 50,\n            aiPercentage: total > 0 ? Math.round(ai / total * 100) : 50\n        };\n        return {\n            gameState: this.getGameState(),\n            voteStats\n        };\n    }\n    nextRound() {\n        if (this.gameState.currentRound >= this.gameState.maxRounds) {\n            throw new Error('Game already completed');\n        }\n        this.gameState.currentRound++;\n        this.gameState.topic = '';\n        this.gameState.humanRoast = '';\n        this.gameState.aiRoast = '';\n        this.gameState.votes = {\n            human: 0,\n            ai: 0\n        };\n        this.gameState.isVotingOpen = false;\n        return this.getGameState();\n    }\n    resetGame() {\n        this.gameState = {\n            gameStarted: false,\n            currentRound: 1,\n            maxRounds: 3,\n            topic: '',\n            humanRoast: '',\n            aiRoast: '',\n            isVotingOpen: false,\n            votes: {\n                human: 0,\n                ai: 0\n            },\n            roundWinners: []\n        };\n        return this.getGameState();\n    }\n    getFinalWinner() {\n        if (this.gameState.roundWinners.length < this.gameState.maxRounds) {\n            return null;\n        }\n        const humanWins = this.gameState.roundWinners.filter((w)=>w === 'human').length;\n        const aiWins = this.gameState.roundWinners.filter((w)=>w === 'ai').length;\n        if (humanWins > aiWins) {\n            return 'human';\n        } else if (aiWins > humanWins) {\n            return 'ai';\n        } else {\n            return 'tie';\n        }\n    }\n    constructor(){\n        this.gameState = {\n            gameStarted: false,\n            currentRound: 1,\n            maxRounds: 3,\n            topic: '',\n            humanRoast: '',\n            aiRoast: '',\n            isVotingOpen: false,\n            votes: {\n                human: 0,\n                ai: 0\n            },\n            roundWinners: []\n        };\n    }\n}\n// Export singleton instance\nconst voteStore = new VoteStore();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./lib/voteStore.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-roast&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-roast.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-roast&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-roast.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   handler: () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/api-utils */ \"(api-node)/./node_modules/next/dist/server/api-utils/index.js\");\n/* harmony import */ var next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_generate_roast_ts__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./pages/api/generate-roast.ts */ \"(api-node)/./pages/api/generate-roast.ts\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! next/dist/server/lib/trace/tracer */ \"(api-node)/./node_modules/next/dist/server/lib/trace/tracer.js\");\n/* harmony import */ var next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! next/dist/server/lib/trace/constants */ \"(api-node)/./node_modules/next/dist/server/lib/trace/constants.js\");\n/* harmony import */ var next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__);\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_pages_api_generate_roast_ts__WEBPACK_IMPORTED_MODULE_4__]);\n_pages_api_generate_roast_ts__WEBPACK_IMPORTED_MODULE_4__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\n\n// Import the userland code.\n\n\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_generate_roast_ts__WEBPACK_IMPORTED_MODULE_4__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_3__.hoist)(_pages_api_generate_roast_ts__WEBPACK_IMPORTED_MODULE_4__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_2__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/generate-roast\",\n        pathname: \"/api/generate-roast\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_generate_roast_ts__WEBPACK_IMPORTED_MODULE_4__,\n    distDir: \".next\" || 0,\n    projectDir:  false || ''\n});\nasync function handler(req, res, ctx) {\n    let srcPage = \"/api/generate-roast\";\n    // turbopack doesn't normalize `/index` in the page name\n    // so we need to to process dynamic routes properly\n    // TODO: fix turbopack providing differing value from webpack\n    if (false) {}\n    const prepareResult = await routeModule.prepare(req, res, {\n        srcPage\n    });\n    if (!prepareResult) {\n        res.statusCode = 400;\n        res.end('Bad Request');\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n        return;\n    }\n    const { query, params, prerenderManifest } = prepareResult;\n    try {\n        const method = req.method || 'GET';\n        const tracer = (0,next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.getTracer)();\n        const activeSpan = tracer.getActiveScopeSpan();\n        const onRequestError = routeModule.instrumentationOnRequestError.bind(routeModule);\n        const invokeRouteModule = async (span)=>routeModule.render(req, res, {\n                query: {\n                    ...query,\n                    ...params\n                },\n                params,\n                allowedRevalidateHeaderKeys: undefined,\n                multiZoneDraftMode: Boolean(\"false\"),\n                trustHostHeader: undefined,\n                // TODO: get this from from runtime env so manifest\n                // doesn't need to load\n                previewProps: prerenderManifest.preview,\n                propagateError: false,\n                dev: routeModule.isDev,\n                page: \"/api/generate-roast\",\n                projectDir:  false || '',\n                onError: (...args)=>onRequestError(req, ...args)\n            }).finally(()=>{\n                if (!span) return;\n                span.setAttributes({\n                    'http.status_code': res.statusCode,\n                    'next.rsc': false\n                });\n                const rootSpanAttributes = tracer.getRootSpanAttributes();\n                // We were unable to get attributes, probably OTEL is not enabled\n                if (!rootSpanAttributes) {\n                    return;\n                }\n                if (rootSpanAttributes.get('next.span_type') !== next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest) {\n                    console.warn(`Unexpected root span type '${rootSpanAttributes.get('next.span_type')}'. Please report this Next.js issue https://github.com/vercel/next.js`);\n                    return;\n                }\n                const route = rootSpanAttributes.get('next.route');\n                if (route) {\n                    const name = `${method} ${route}`;\n                    span.setAttributes({\n                        'next.route': route,\n                        'http.route': route,\n                        'next.span_name': name\n                    });\n                    span.updateName(name);\n                } else {\n                    span.updateName(`${method} ${req.url}`);\n                }\n            });\n        // TODO: activeSpan code path is for when wrapped by\n        // next-server can be removed when this is no longer used\n        if (activeSpan) {\n            await invokeRouteModule(activeSpan);\n        } else {\n            await tracer.withPropagatedContext(req.headers, ()=>tracer.trace(next_dist_server_lib_trace_constants__WEBPACK_IMPORTED_MODULE_6__.BaseServerSpan.handleRequest, {\n                    spanName: `${method} ${req.url}`,\n                    kind: next_dist_server_lib_trace_tracer__WEBPACK_IMPORTED_MODULE_5__.SpanKind.SERVER,\n                    attributes: {\n                        'http.method': method,\n                        'http.target': req.url\n                    }\n                }, invokeRouteModule));\n        }\n    } catch (err) {\n        // we re-throw in dev to show the error overlay\n        if (routeModule.isDev) {\n            throw err;\n        }\n        // this is technically an invariant as error handling\n        // should be done inside of api-resolver onError\n        (0,next_dist_server_api_utils__WEBPACK_IMPORTED_MODULE_0__.sendError)(res, 500, 'Internal Server Error');\n    } finally{\n        // We don't allow any waitUntil work in pages API routes currently\n        // so if callback is present return with resolved promise since no\n        // pending work\n        ctx.waitUntil == null ? void 0 : ctx.waitUntil.call(ctx, Promise.resolve());\n    }\n}\n\n//# sourceMappingURL=pages-api.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-roast&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-roast.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/generate-roast.ts":
/*!*************************************!*\
  !*** ./pages/api/generate-roast.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var openai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! openai */ \"openai\");\n/* harmony import */ var _lib_voteStore__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/voteStore */ \"(api-node)/./lib/voteStore.ts\");\n/* harmony import */ var _utils_gptPrompt__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/utils/gptPrompt */ \"(api-node)/./utils/gptPrompt.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([openai__WEBPACK_IMPORTED_MODULE_0__]);\nopenai__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\n\nconst openai = new openai__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n    apiKey: process.env.OPENAI_API_KEY\n});\nasync function handler(req, res) {\n    if (req.method !== 'POST') {\n        return res.status(405).json({\n            message: 'Method not allowed'\n        });\n    }\n    try {\n        const { topic, theme } = req.body;\n        if (!topic || typeof topic !== 'string') {\n            return res.status(400).json({\n                message: 'Topic is required'\n            });\n        }\n        if (!process.env.OPENAI_API_KEY) {\n            return res.status(500).json({\n                message: 'OpenAI API key not configured'\n            });\n        }\n        // Create the appropriate prompt based on whether theme is provided\n        const prompt = theme ? (0,_utils_gptPrompt__WEBPACK_IMPORTED_MODULE_2__.createThemedRoastPrompt)(topic, theme) : (0,_utils_gptPrompt__WEBPACK_IMPORTED_MODULE_2__.createRoastPrompt)(topic);\n        // Generate roast using GPT-4o\n        const completion = await openai.chat.completions.create({\n            model: \"gpt-4o\",\n            messages: [\n                {\n                    role: \"system\",\n                    content: \"You are a professional roast comedian. Create funny, clever roasts that would get laughs from a live audience. Keep them clean and focus on being witty rather than mean.\"\n                },\n                {\n                    role: \"user\",\n                    content: prompt\n                }\n            ],\n            max_tokens: 150,\n            temperature: 0.9,\n            presence_penalty: 0.3,\n            frequency_penalty: 0.3\n        });\n        const aiRoast = completion.choices[0]?.message?.content?.trim();\n        if (!aiRoast) {\n            return res.status(500).json({\n                message: 'Failed to generate roast'\n            });\n        }\n        // Update the vote store with the AI roast\n        const gameState = _lib_voteStore__WEBPACK_IMPORTED_MODULE_1__.voteStore.setAIRoast(aiRoast);\n        res.status(200).json({\n            success: true,\n            roast: aiRoast,\n            gameState\n        });\n    } catch (error) {\n        console.error('Error generating roast:', error);\n        // Handle specific OpenAI errors\n        if (error.code === 'insufficient_quota') {\n            return res.status(402).json({\n                message: 'OpenAI quota exceeded. Please check your billing.'\n            });\n        }\n        if (error.code === 'invalid_api_key') {\n            return res.status(401).json({\n                message: 'Invalid OpenAI API key'\n            });\n        }\n        res.status(500).json({\n            message: 'Failed to generate roast',\n            error:  true ? error.message : 0\n        });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3BhZ2VzL2FwaS9nZW5lcmF0ZS1yb2FzdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQzRCO0FBQ2dCO0FBQ21DO0FBRS9FLE1BQU1JLFNBQVMsSUFBSUosOENBQU1BLENBQUM7SUFDeEJLLFFBQVFDLFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYztBQUNwQztBQUVlLGVBQWVDLFFBQzVCQyxHQUFtQixFQUNuQkMsR0FBb0I7SUFFcEIsSUFBSUQsSUFBSUUsTUFBTSxLQUFLLFFBQVE7UUFDekIsT0FBT0QsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQXFCO0lBQzlEO0lBRUEsSUFBSTtRQUNGLE1BQU0sRUFBRUMsS0FBSyxFQUFFQyxLQUFLLEVBQUUsR0FBR1AsSUFBSVEsSUFBSTtRQUVqQyxJQUFJLENBQUNGLFNBQVMsT0FBT0EsVUFBVSxVQUFVO1lBQ3ZDLE9BQU9MLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBb0I7UUFDN0Q7UUFFQSxJQUFJLENBQUNULFFBQVFDLEdBQUcsQ0FBQ0MsY0FBYyxFQUFFO1lBQy9CLE9BQU9HLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBZ0M7UUFDekU7UUFFQSxtRUFBbUU7UUFDbkUsTUFBTUksU0FBU0YsUUFDWGQseUVBQXVCQSxDQUFDYSxPQUFPQyxTQUMvQmYsbUVBQWlCQSxDQUFDYztRQUV0Qiw4QkFBOEI7UUFDOUIsTUFBTUksYUFBYSxNQUFNaEIsT0FBT2lCLElBQUksQ0FBQ0MsV0FBVyxDQUFDQyxNQUFNLENBQUM7WUFDdERDLE9BQU87WUFDUEMsVUFBVTtnQkFDUjtvQkFDRUMsTUFBTTtvQkFDTkMsU0FBUztnQkFDWDtnQkFDQTtvQkFDRUQsTUFBTTtvQkFDTkMsU0FBU1I7Z0JBQ1g7YUFDRDtZQUNEUyxZQUFZO1lBQ1pDLGFBQWE7WUFDYkMsa0JBQWtCO1lBQ2xCQyxtQkFBbUI7UUFDckI7UUFFQSxNQUFNQyxVQUFVWixXQUFXYSxPQUFPLENBQUMsRUFBRSxFQUFFbEIsU0FBU1ksU0FBU087UUFFekQsSUFBSSxDQUFDRixTQUFTO1lBQ1osT0FBT3JCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQUVDLFNBQVM7WUFBMkI7UUFDcEU7UUFFQSwwQ0FBMEM7UUFDMUMsTUFBTW9CLFlBQVlsQyxxREFBU0EsQ0FBQ21DLFVBQVUsQ0FBQ0o7UUFFdkNyQixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CdUIsU0FBUztZQUNUQyxPQUFPTjtZQUNQRztRQUNGO0lBRUYsRUFBRSxPQUFPSSxPQUFZO1FBQ25CQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUV6QyxnQ0FBZ0M7UUFDaEMsSUFBSUEsTUFBTUUsSUFBSSxLQUFLLHNCQUFzQjtZQUN2QyxPQUFPOUIsSUFBSUUsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztnQkFDMUJDLFNBQVM7WUFDWDtRQUNGO1FBRUEsSUFBSXdCLE1BQU1FLElBQUksS0FBSyxtQkFBbUI7WUFDcEMsT0FBTzlCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCQyxTQUFTO1lBQ1g7UUFDRjtRQUVBSixJQUFJRSxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1lBQ25CQyxTQUFTO1lBQ1R3QixPQUFPakMsS0FBc0MsR0FBR2lDLE1BQU14QixPQUFPLEdBQUcyQixDQUFTQTtRQUMzRTtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIi9Vc2Vycy90cmV2b3JhbHBlcnQvRGVza3RvcC9Sb2FzdEJvdC9wYWdlcy9hcGkvZ2VuZXJhdGUtcm9hc3QudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dEFwaVJlcXVlc3QsIE5leHRBcGlSZXNwb25zZSB9IGZyb20gJ25leHQnO1xuaW1wb3J0IE9wZW5BSSBmcm9tICdvcGVuYWknO1xuaW1wb3J0IHsgdm90ZVN0b3JlIH0gZnJvbSAnQC9saWIvdm90ZVN0b3JlJztcbmltcG9ydCB7IGNyZWF0ZVJvYXN0UHJvbXB0LCBjcmVhdGVUaGVtZWRSb2FzdFByb21wdCB9IGZyb20gJ0AvdXRpbHMvZ3B0UHJvbXB0JztcblxuY29uc3Qgb3BlbmFpID0gbmV3IE9wZW5BSSh7XG4gIGFwaUtleTogcHJvY2Vzcy5lbnYuT1BFTkFJX0FQSV9LRVksXG59KTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihcbiAgcmVxOiBOZXh0QXBpUmVxdWVzdCxcbiAgcmVzOiBOZXh0QXBpUmVzcG9uc2Vcbikge1xuICBpZiAocmVxLm1ldGhvZCAhPT0gJ1BPU1QnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XG4gIH1cblxuICB0cnkge1xuICAgIGNvbnN0IHsgdG9waWMsIHRoZW1lIH0gPSByZXEuYm9keTtcblxuICAgIGlmICghdG9waWMgfHwgdHlwZW9mIHRvcGljICE9PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAwKS5qc29uKHsgbWVzc2FnZTogJ1RvcGljIGlzIHJlcXVpcmVkJyB9KTtcbiAgICB9XG5cbiAgICBpZiAoIXByb2Nlc3MuZW52Lk9QRU5BSV9BUElfS0VZKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnT3BlbkFJIEFQSSBrZXkgbm90IGNvbmZpZ3VyZWQnIH0pO1xuICAgIH1cblxuICAgIC8vIENyZWF0ZSB0aGUgYXBwcm9wcmlhdGUgcHJvbXB0IGJhc2VkIG9uIHdoZXRoZXIgdGhlbWUgaXMgcHJvdmlkZWRcbiAgICBjb25zdCBwcm9tcHQgPSB0aGVtZSBcbiAgICAgID8gY3JlYXRlVGhlbWVkUm9hc3RQcm9tcHQodG9waWMsIHRoZW1lKVxuICAgICAgOiBjcmVhdGVSb2FzdFByb21wdCh0b3BpYyk7XG5cbiAgICAvLyBHZW5lcmF0ZSByb2FzdCB1c2luZyBHUFQtNG9cbiAgICBjb25zdCBjb21wbGV0aW9uID0gYXdhaXQgb3BlbmFpLmNoYXQuY29tcGxldGlvbnMuY3JlYXRlKHtcbiAgICAgIG1vZGVsOiBcImdwdC00b1wiLFxuICAgICAgbWVzc2FnZXM6IFtcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6IFwic3lzdGVtXCIsXG4gICAgICAgICAgY29udGVudDogXCJZb3UgYXJlIGEgcHJvZmVzc2lvbmFsIHJvYXN0IGNvbWVkaWFuLiBDcmVhdGUgZnVubnksIGNsZXZlciByb2FzdHMgdGhhdCB3b3VsZCBnZXQgbGF1Z2hzIGZyb20gYSBsaXZlIGF1ZGllbmNlLiBLZWVwIHRoZW0gY2xlYW4gYW5kIGZvY3VzIG9uIGJlaW5nIHdpdHR5IHJhdGhlciB0aGFuIG1lYW4uXCJcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIHJvbGU6IFwidXNlclwiLFxuICAgICAgICAgIGNvbnRlbnQ6IHByb21wdFxuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgbWF4X3Rva2VuczogMTUwLFxuICAgICAgdGVtcGVyYXR1cmU6IDAuOSwgLy8gSGlnaCBjcmVhdGl2aXR5XG4gICAgICBwcmVzZW5jZV9wZW5hbHR5OiAwLjMsXG4gICAgICBmcmVxdWVuY3lfcGVuYWx0eTogMC4zLFxuICAgIH0pO1xuXG4gICAgY29uc3QgYWlSb2FzdCA9IGNvbXBsZXRpb24uY2hvaWNlc1swXT8ubWVzc2FnZT8uY29udGVudD8udHJpbSgpO1xuXG4gICAgaWYgKCFhaVJvYXN0KSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnRmFpbGVkIHRvIGdlbmVyYXRlIHJvYXN0JyB9KTtcbiAgICB9XG5cbiAgICAvLyBVcGRhdGUgdGhlIHZvdGUgc3RvcmUgd2l0aCB0aGUgQUkgcm9hc3RcbiAgICBjb25zdCBnYW1lU3RhdGUgPSB2b3RlU3RvcmUuc2V0QUlSb2FzdChhaVJvYXN0KTtcblxuICAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICByb2FzdDogYWlSb2FzdCxcbiAgICAgIGdhbWVTdGF0ZVxuICAgIH0pO1xuXG4gIH0gY2F0Y2ggKGVycm9yOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBnZW5lcmF0aW5nIHJvYXN0OicsIGVycm9yKTtcbiAgICBcbiAgICAvLyBIYW5kbGUgc3BlY2lmaWMgT3BlbkFJIGVycm9yc1xuICAgIGlmIChlcnJvci5jb2RlID09PSAnaW5zdWZmaWNpZW50X3F1b3RhJykge1xuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAyKS5qc29uKHsgXG4gICAgICAgIG1lc3NhZ2U6ICdPcGVuQUkgcXVvdGEgZXhjZWVkZWQuIFBsZWFzZSBjaGVjayB5b3VyIGJpbGxpbmcuJyBcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICBpZiAoZXJyb3IuY29kZSA9PT0gJ2ludmFsaWRfYXBpX2tleScpIHtcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7IFxuICAgICAgICBtZXNzYWdlOiAnSW52YWxpZCBPcGVuQUkgQVBJIGtleScgXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IFxuICAgICAgbWVzc2FnZTogJ0ZhaWxlZCB0byBnZW5lcmF0ZSByb2FzdCcsXG4gICAgICBlcnJvcjogcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcgPyBlcnJvci5tZXNzYWdlIDogdW5kZWZpbmVkXG4gICAgfSk7XG4gIH1cbn0gIl0sIm5hbWVzIjpbIk9wZW5BSSIsInZvdGVTdG9yZSIsImNyZWF0ZVJvYXN0UHJvbXB0IiwiY3JlYXRlVGhlbWVkUm9hc3RQcm9tcHQiLCJvcGVuYWkiLCJhcGlLZXkiLCJwcm9jZXNzIiwiZW52IiwiT1BFTkFJX0FQSV9LRVkiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJ0b3BpYyIsInRoZW1lIiwiYm9keSIsInByb21wdCIsImNvbXBsZXRpb24iLCJjaGF0IiwiY29tcGxldGlvbnMiLCJjcmVhdGUiLCJtb2RlbCIsIm1lc3NhZ2VzIiwicm9sZSIsImNvbnRlbnQiLCJtYXhfdG9rZW5zIiwidGVtcGVyYXR1cmUiLCJwcmVzZW5jZV9wZW5hbHR5IiwiZnJlcXVlbmN5X3BlbmFsdHkiLCJhaVJvYXN0IiwiY2hvaWNlcyIsInRyaW0iLCJnYW1lU3RhdGUiLCJzZXRBSVJvYXN0Iiwic3VjY2VzcyIsInJvYXN0IiwiZXJyb3IiLCJjb25zb2xlIiwiY29kZSIsInVuZGVmaW5lZCJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/generate-roast.ts\n");

/***/ }),

/***/ "(api-node)/./utils/gptPrompt.ts":
/*!****************************!*\
  !*** ./utils/gptPrompt.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ROAST_TOPICS: () => (/* binding */ ROAST_TOPICS),\n/* harmony export */   createRoastPrompt: () => (/* binding */ createRoastPrompt),\n/* harmony export */   createThemedRoastPrompt: () => (/* binding */ createThemedRoastPrompt),\n/* harmony export */   getRandomTopic: () => (/* binding */ getRandomTopic)\n/* harmony export */ });\n// GPT prompt utilities for RoastBot\nfunction createRoastPrompt(topic) {\n    return `You are a world-class roast comedian competing in a roast battle. Your task is to create a hilarious, clever, and creative roast about the topic: \"${topic}\".\n\nRULES:\n- Keep it under 100 words\n- Be clever and witty, not mean-spirited\n- Use humor techniques like wordplay, exaggeration, or unexpected comparisons\n- Make it family-friendly (no explicit content)\n- Focus on the topic itself, not attacking people\n- Be original and creative\n\nEXAMPLES OF GOOD ROAST STYLE:\n- \"That topic is so old, it makes dinosaurs look trendy\"\n- \"It's got more issues than a magazine subscription\"\n- \"Even a GPS would get lost trying to find something good about that\"\n\nCreate a SINGLE, punchy roast that would get laughs from a live audience. Be confident and deliver it like you're on stage!\n\nTopic to roast: ${topic}\n\nYour roast:`;\n}\nfunction createThemedRoastPrompt(topic, theme) {\n    return `You are a world-class roast comedian competing in a roast battle with a special theme. Your task is to create a hilarious roast about \"${topic}\" but deliver it in the style of: ${theme}.\n\nRULES:\n- Keep it under 100 words\n- Maintain the ${theme} character/style throughout\n- Be clever and witty, not mean-spirited\n- Make it family-friendly (no explicit content)\n- Focus on roasting the topic: \"${topic}\"\n\nTHEME STYLES:\n- \"pirate\": Use \"arr\", \"matey\", nautical terms\n- \"shakespeare\": Use \"thou\", \"thy\", eloquent old English\n- \"robot\": Use technical terms, \"COMPUTING...\", \"ERROR DETECTED\"\n- \"surfer\": Use \"dude\", \"gnarly\", \"totally rad\"\n- \"detective\": Use \"The evidence shows...\", \"Case closed\"\n\nTopic to roast: ${topic}\nTheme: ${theme}\n\nYour themed roast:`;\n}\nconst ROAST_TOPICS = [\n    \"Pineapple on pizza\",\n    \"People who don't use turn signals\",\n    \"WiFi that's always slow\",\n    \"Meetings that could have been emails\",\n    \"People who leave one second on the microwave\",\n    \"Autocorrect fails\",\n    \"Traffic jams\",\n    \"Monday mornings\",\n    \"Expired milk\",\n    \"Assembly instructions\",\n    \"Slow elevators\",\n    \"Dead phone batteries\",\n    \"Soggy cereal\",\n    \"Cold coffee\",\n    \"Tangled earbuds\"\n];\nfunction getRandomTopic() {\n    return ROAST_TOPICS[Math.floor(Math.random() * ROAST_TOPICS.length)];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL3V0aWxzL2dwdFByb21wdC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsb0NBQW9DO0FBRTdCLFNBQVNBLGtCQUFrQkMsS0FBYTtJQUM3QyxPQUFPLENBQUMsbUpBQW1KLEVBQUVBLE1BQU07Ozs7Ozs7Ozs7Ozs7Ozs7O2dCQWlCckosRUFBRUEsTUFBTTs7V0FFYixDQUFDO0FBQ1o7QUFFTyxTQUFTQyx3QkFBd0JELEtBQWEsRUFBRUUsS0FBYTtJQUNsRSxPQUFPLENBQUMsdUlBQXVJLEVBQUVGLE1BQU0sa0NBQWtDLEVBQUVFLE1BQU07Ozs7ZUFJcEwsRUFBRUEsTUFBTTs7O2dDQUdTLEVBQUVGLE1BQU07Ozs7Ozs7OztnQkFTeEIsRUFBRUEsTUFBTTtPQUNqQixFQUFFRSxNQUFNOztrQkFFRyxDQUFDO0FBQ25CO0FBRU8sTUFBTUMsZUFBZTtJQUMxQjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7Q0FDRCxDQUFDO0FBRUssU0FBU0M7SUFDZCxPQUFPRCxZQUFZLENBQUNFLEtBQUtDLEtBQUssQ0FBQ0QsS0FBS0UsTUFBTSxLQUFLSixhQUFhSyxNQUFNLEVBQUU7QUFDdEUiLCJzb3VyY2VzIjpbIi9Vc2Vycy90cmV2b3JhbHBlcnQvRGVza3RvcC9Sb2FzdEJvdC91dGlscy9ncHRQcm9tcHQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gR1BUIHByb21wdCB1dGlsaXRpZXMgZm9yIFJvYXN0Qm90XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVSb2FzdFByb21wdCh0b3BpYzogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBZb3UgYXJlIGEgd29ybGQtY2xhc3Mgcm9hc3QgY29tZWRpYW4gY29tcGV0aW5nIGluIGEgcm9hc3QgYmF0dGxlLiBZb3VyIHRhc2sgaXMgdG8gY3JlYXRlIGEgaGlsYXJpb3VzLCBjbGV2ZXIsIGFuZCBjcmVhdGl2ZSByb2FzdCBhYm91dCB0aGUgdG9waWM6IFwiJHt0b3BpY31cIi5cblxuUlVMRVM6XG4tIEtlZXAgaXQgdW5kZXIgMTAwIHdvcmRzXG4tIEJlIGNsZXZlciBhbmQgd2l0dHksIG5vdCBtZWFuLXNwaXJpdGVkXG4tIFVzZSBodW1vciB0ZWNobmlxdWVzIGxpa2Ugd29yZHBsYXksIGV4YWdnZXJhdGlvbiwgb3IgdW5leHBlY3RlZCBjb21wYXJpc29uc1xuLSBNYWtlIGl0IGZhbWlseS1mcmllbmRseSAobm8gZXhwbGljaXQgY29udGVudClcbi0gRm9jdXMgb24gdGhlIHRvcGljIGl0c2VsZiwgbm90IGF0dGFja2luZyBwZW9wbGVcbi0gQmUgb3JpZ2luYWwgYW5kIGNyZWF0aXZlXG5cbkVYQU1QTEVTIE9GIEdPT0QgUk9BU1QgU1RZTEU6XG4tIFwiVGhhdCB0b3BpYyBpcyBzbyBvbGQsIGl0IG1ha2VzIGRpbm9zYXVycyBsb29rIHRyZW5keVwiXG4tIFwiSXQncyBnb3QgbW9yZSBpc3N1ZXMgdGhhbiBhIG1hZ2F6aW5lIHN1YnNjcmlwdGlvblwiXG4tIFwiRXZlbiBhIEdQUyB3b3VsZCBnZXQgbG9zdCB0cnlpbmcgdG8gZmluZCBzb21ldGhpbmcgZ29vZCBhYm91dCB0aGF0XCJcblxuQ3JlYXRlIGEgU0lOR0xFLCBwdW5jaHkgcm9hc3QgdGhhdCB3b3VsZCBnZXQgbGF1Z2hzIGZyb20gYSBsaXZlIGF1ZGllbmNlLiBCZSBjb25maWRlbnQgYW5kIGRlbGl2ZXIgaXQgbGlrZSB5b3UncmUgb24gc3RhZ2UhXG5cblRvcGljIHRvIHJvYXN0OiAke3RvcGljfVxuXG5Zb3VyIHJvYXN0OmA7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVUaGVtZWRSb2FzdFByb21wdCh0b3BpYzogc3RyaW5nLCB0aGVtZTogc3RyaW5nKTogc3RyaW5nIHtcbiAgcmV0dXJuIGBZb3UgYXJlIGEgd29ybGQtY2xhc3Mgcm9hc3QgY29tZWRpYW4gY29tcGV0aW5nIGluIGEgcm9hc3QgYmF0dGxlIHdpdGggYSBzcGVjaWFsIHRoZW1lLiBZb3VyIHRhc2sgaXMgdG8gY3JlYXRlIGEgaGlsYXJpb3VzIHJvYXN0IGFib3V0IFwiJHt0b3BpY31cIiBidXQgZGVsaXZlciBpdCBpbiB0aGUgc3R5bGUgb2Y6ICR7dGhlbWV9LlxuXG5SVUxFUzpcbi0gS2VlcCBpdCB1bmRlciAxMDAgd29yZHNcbi0gTWFpbnRhaW4gdGhlICR7dGhlbWV9IGNoYXJhY3Rlci9zdHlsZSB0aHJvdWdob3V0XG4tIEJlIGNsZXZlciBhbmQgd2l0dHksIG5vdCBtZWFuLXNwaXJpdGVkXG4tIE1ha2UgaXQgZmFtaWx5LWZyaWVuZGx5IChubyBleHBsaWNpdCBjb250ZW50KVxuLSBGb2N1cyBvbiByb2FzdGluZyB0aGUgdG9waWM6IFwiJHt0b3BpY31cIlxuXG5USEVNRSBTVFlMRVM6XG4tIFwicGlyYXRlXCI6IFVzZSBcImFyclwiLCBcIm1hdGV5XCIsIG5hdXRpY2FsIHRlcm1zXG4tIFwic2hha2VzcGVhcmVcIjogVXNlIFwidGhvdVwiLCBcInRoeVwiLCBlbG9xdWVudCBvbGQgRW5nbGlzaFxuLSBcInJvYm90XCI6IFVzZSB0ZWNobmljYWwgdGVybXMsIFwiQ09NUFVUSU5HLi4uXCIsIFwiRVJST1IgREVURUNURURcIlxuLSBcInN1cmZlclwiOiBVc2UgXCJkdWRlXCIsIFwiZ25hcmx5XCIsIFwidG90YWxseSByYWRcIlxuLSBcImRldGVjdGl2ZVwiOiBVc2UgXCJUaGUgZXZpZGVuY2Ugc2hvd3MuLi5cIiwgXCJDYXNlIGNsb3NlZFwiXG5cblRvcGljIHRvIHJvYXN0OiAke3RvcGljfVxuVGhlbWU6ICR7dGhlbWV9XG5cbllvdXIgdGhlbWVkIHJvYXN0OmA7XG59XG5cbmV4cG9ydCBjb25zdCBST0FTVF9UT1BJQ1MgPSBbXG4gIFwiUGluZWFwcGxlIG9uIHBpenphXCIsXG4gIFwiUGVvcGxlIHdobyBkb24ndCB1c2UgdHVybiBzaWduYWxzXCIsXG4gIFwiV2lGaSB0aGF0J3MgYWx3YXlzIHNsb3dcIixcbiAgXCJNZWV0aW5ncyB0aGF0IGNvdWxkIGhhdmUgYmVlbiBlbWFpbHNcIixcbiAgXCJQZW9wbGUgd2hvIGxlYXZlIG9uZSBzZWNvbmQgb24gdGhlIG1pY3Jvd2F2ZVwiLFxuICBcIkF1dG9jb3JyZWN0IGZhaWxzXCIsXG4gIFwiVHJhZmZpYyBqYW1zXCIsXG4gIFwiTW9uZGF5IG1vcm5pbmdzXCIsXG4gIFwiRXhwaXJlZCBtaWxrXCIsXG4gIFwiQXNzZW1ibHkgaW5zdHJ1Y3Rpb25zXCIsXG4gIFwiU2xvdyBlbGV2YXRvcnNcIixcbiAgXCJEZWFkIHBob25lIGJhdHRlcmllc1wiLFxuICBcIlNvZ2d5IGNlcmVhbFwiLFxuICBcIkNvbGQgY29mZmVlXCIsXG4gIFwiVGFuZ2xlZCBlYXJidWRzXCJcbl07XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRSYW5kb21Ub3BpYygpOiBzdHJpbmcge1xuICByZXR1cm4gUk9BU1RfVE9QSUNTW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIFJPQVNUX1RPUElDUy5sZW5ndGgpXTtcbn0gIl0sIm5hbWVzIjpbImNyZWF0ZVJvYXN0UHJvbXB0IiwidG9waWMiLCJjcmVhdGVUaGVtZWRSb2FzdFByb21wdCIsInRoZW1lIiwiUk9BU1RfVE9QSUNTIiwiZ2V0UmFuZG9tVG9waWMiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJsZW5ndGgiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api-node)/./utils/gptPrompt.ts\n");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "openai":
/*!*************************!*\
  !*** external "openai" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("openai");;

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api-node)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fgenerate-roast&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fgenerate-roast.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();